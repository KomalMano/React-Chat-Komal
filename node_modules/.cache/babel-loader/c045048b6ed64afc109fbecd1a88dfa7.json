{"ast":null,"code":"import _slicedToArray from\"D:/Software/Web Development/Projects/4.Chat-app using React+firebase+scss/chatting-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{doc,onSnapshot}from\"firebase/firestore\";import React,{useContext,useEffect,useState}from\"react\";import{ChatContext}from\"../context/ChatContext\";import{db}from\"../firebase\";import Message from\"./Message\";import{jsx as _jsx}from\"react/jsx-runtime\";var Messages=function Messages(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useContext=useContext(ChatContext),data=_useContext.data;useEffect(function(){var unSub=onSnapshot(doc(db,\"chats\",data.chatId),function(doc){doc.exists()&&setMessages(doc.data().messages);});return function(){unSub();};},[data.chatId]);console.log(messages);return/*#__PURE__*/_jsx(\"div\",{className:\"messages\",children:messages.map(function(m){return/*#__PURE__*/_jsx(Message,{message:m},m.id);})});};export default Messages;// import { doc, onSnapshot } from 'firebase/firestore'\n// import React from 'react'\n// import { useState } from 'react'\n// import { useEffect } from 'react'\n// import { useContext } from 'react'\n// import { ChatContext } from '../context/ChatContext'\n// import { db } from \"../firebase\";\n// import Message from './Message'\n// const Messages = () => {\n//   const [chatting, setChatting] = useState([])\n//   const {data} = useContext(ChatContext)\n//   useEffect(() => {\n//     const unSub = onSnapshot(doc(db,\"chats\", data.chatId), (doc) => {\n//       doc.exists() && setChatting(doc.data().chatting)\n//     })\n//     // clean up\n//     return () => {\n//       unSub()\n//     }\n//   },[data.chatId])\n//   console.log(chatting)\n//   return (\n//     <div className='messages'>\n//       {/* now use map method to get messages directly */}\n//       {chatting.map((m) => (\n//         <Message chatting={m} key={m.id} />\n//       ))}\n//     </div>\n//   )\n// }\n// export default Messages","map":{"version":3,"names":["doc","onSnapshot","React","useContext","useEffect","useState","ChatContext","db","Message","Messages","messages","setMessages","data","unSub","chatId","exists","console","log","map","m","id"],"sources":["D:/Software/Web Development/Projects/4.Chat-app using React+firebase+scss/chatting-app/src/components/Messages.jsx"],"sourcesContent":["import { doc, onSnapshot } from \"firebase/firestore\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { ChatContext } from \"../context/ChatContext\";\r\nimport { db } from \"../firebase\";\r\nimport Message from \"./Message\";\r\n\r\nconst Messages = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const { data } = useContext(ChatContext);\r\n\r\n  useEffect(() => {\r\n    const unSub = onSnapshot(doc(db, \"chats\", data.chatId), (doc) => {\r\n      doc.exists() && setMessages(doc.data().messages);\r\n    });\r\n\r\n    return () => {\r\n      unSub();\r\n    };\r\n  }, [data.chatId]);\r\n\r\n  console.log(messages)\r\n\r\n  return (\r\n    <div className=\"messages\">\r\n      {messages.map((m) => (\r\n        <Message message={m} key={m.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { doc, onSnapshot } from 'firebase/firestore'\r\n// import React from 'react'\r\n// import { useState } from 'react'\r\n// import { useEffect } from 'react'\r\n// import { useContext } from 'react'\r\n// import { ChatContext } from '../context/ChatContext'\r\n// import { db } from \"../firebase\";\r\n// import Message from './Message'\r\n\r\n// const Messages = () => {\r\n//   const [chatting, setChatting] = useState([])\r\n//   const {data} = useContext(ChatContext)\r\n\r\n//   useEffect(() => {\r\n//     const unSub = onSnapshot(doc(db,\"chats\", data.chatId), (doc) => {\r\n//       doc.exists() && setChatting(doc.data().chatting)\r\n//     })\r\n//     // clean up\r\n//     return () => {\r\n//       unSub()\r\n//     }\r\n//   },[data.chatId])\r\n\r\n//   console.log(chatting)\r\n//   return (\r\n//     <div className='messages'>\r\n//       {/* now use map method to get messages directly */}\r\n//       {chatting.map((m) => (\r\n//         <Message chatting={m} key={m.id} />\r\n//       ))}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Messages\r\n"],"mappings":"4KAAA,OAASA,GAAT,CAAcC,UAAd,KAAgC,oBAAhC,CACA,MAAOC,MAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,CAAuCC,QAAvC,KAAuD,OAAvD,CACA,OAASC,WAAT,KAA4B,wBAA5B,CACA,OAASC,EAAT,KAAmB,aAAnB,CACA,MAAOC,QAAP,KAAoB,WAApB,C,2CAEA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,EAAM,CACrB,cAAgCJ,QAAQ,CAAC,EAAD,CAAxC,wCAAOK,QAAP,eAAiBC,WAAjB,eACA,gBAAiBR,UAAU,CAACG,WAAD,CAA3B,CAAQM,IAAR,aAAQA,IAAR,CAEAR,SAAS,CAAC,UAAM,CACd,GAAMS,MAAK,CAAGZ,UAAU,CAACD,GAAG,CAACO,EAAD,CAAK,OAAL,CAAcK,IAAI,CAACE,MAAnB,CAAJ,CAAgC,SAACd,GAAD,CAAS,CAC/DA,GAAG,CAACe,MAAJ,IAAgBJ,WAAW,CAACX,GAAG,CAACY,IAAJ,GAAWF,QAAZ,CAA3B,CACD,CAFuB,CAAxB,CAIA,MAAO,WAAM,CACXG,KAAK,GACN,CAFD,CAGD,CARQ,CAQN,CAACD,IAAI,CAACE,MAAN,CARM,CAAT,CAUAE,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAEA,mBACE,YAAK,SAAS,CAAC,UAAf,UACGA,QAAQ,CAACQ,GAAT,CAAa,SAACC,CAAD,qBACZ,KAAC,OAAD,EAAS,OAAO,CAAEA,CAAlB,EAA0BA,CAAC,CAACC,EAA5B,CADY,EAAb,CADH,EADF,CAOD,CAvBD,CAyBA,cAAeX,SAAf,CAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}