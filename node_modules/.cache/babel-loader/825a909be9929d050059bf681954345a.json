{"ast":null,"code":"var _jsxFileName = \"D:\\\\Software\\\\Web Development\\\\Projects\\\\4.Chat-app using React+firebase+scss\\\\chatting-app\\\\src\\\\pages\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// import Add from \"../img/addAvatar.png\";\n// import { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\n// import { auth, db, storage } from \"../firebase\";\n// import { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\n// import { doc, setDoc } from \"firebase/firestore\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// const Register = () => {\n//   const [err, setErr] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate();\n//   const handleSubmit = async (e) => {\n//     setLoading(true);\n//     e.preventDefault();\n//     const displayName = e.target[0].value;\n//     const email = e.target[1].value;\n//     const password = e.target[2].value;\n//     const file = e.target[3].files[0];\n//     try {\n//       //Create user\n//       const res = await createUserWithEmailAndPassword(auth, email, password);\n//       //Create a unique image name\n//       const date = new Date().getTime();\n//       const storageRef = ref(storage, `${displayName + date}`);\n//       await uploadBytesResumable(storageRef, file).then(() => {\n//         getDownloadURL(storageRef).then(async (downloadURL) => {\n//           try {\n//             //Update profile\n//             await updateProfile(res.user, {\n//               displayName,\n//               photoURL: downloadURL,\n//             });\n//             //create user on firestore\n//             await setDoc(doc(db, \"users\", res.user.uid), {\n//               uid: res.user.uid,\n//               displayName,\n//               email,\n//               photoURL: downloadURL,\n//             });\n//             //create empty user chats on firestore\n//             await setDoc(doc(db, \"userChats\", res.user.uid), {});\n//             navigate(\"/\");\n//           } catch (err) {\n//             console.log(err);\n//             setErr(true);\n//             setLoading(false);\n//           }\n//         });\n//       });\n//     } catch (err) {\n//       setErr(true);\n//       setLoading(false);\n//     }\n//   };\n//   return (\n//     <div className=\"formContainer\">\n//       <div className=\"formWrapper\">\n//         <span className=\"logo\">Lama Chat</span>\n//         <span className=\"title\">Register</span>\n//         <form onSubmit={handleSubmit}>\n//           <input required type=\"text\" placeholder=\"display name\" />\n//           <input required type=\"email\" placeholder=\"email\" />\n//           <input required type=\"password\" placeholder=\"password\" />\n//           <input required style={{ display: \"none\" }} type=\"file\" id=\"file\" />\n//           <label htmlFor=\"file\">\n//             <img src={Add} alt=\"\" />\n//             <span>Add an avatar</span>\n//           </label>\n//           <button disabled={loading}>Sign up</button>\n//           {loading && \"Uploading and compressing the image please wait...\"}\n//           {err && <span>Something went wrong</span>}\n//         </form>\n//         <p>\n//           You do have an account? <Link to=\"/login\">Login</Link>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Register;\nimport React, { useState } from 'react';\nimport Add from '../img/addAvatar.png';\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { auth, db, storage } from '../firebase';\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [err, setErr] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // console.log(e.target[0].value)\n\n    const displayName = e.target[0].value;\n    const email = e.target[1].value;\n    const password = e.target[2].value;\n    const file = e.target[3].files[0];\n\n    try {\n      const res = await createUserWithEmailAndPassword(auth, email, password);\n      const date = new Date().getTime();\n      const storageRef = ref(storage, `${displayName + date}`);\n      await uploadBytesResumable(storageRef, file).then(() => {\n        getDownloadURL(storageRef).then(async downloadURL => {\n          try {\n            //Update profile\n            await updateProfile(res.user, {\n              displayName,\n              photoURL: downloadURL\n            }); //create user on firestore\n\n            await setDoc(doc(db, \"users\", res.user.uid), {\n              uid: res.user.uid,\n              displayName,\n              email,\n              photoURL: downloadURL\n            }); //create empty user chats on firestore\n\n            await setDoc(doc(db, \"userChats\", res.user.uid), {});\n            navigate(\"/\");\n          } catch (err) {\n            console.log(err);\n            setErr(true);\n            setLoading(false);\n          }\n        });\n      });\n    } catch (err) {\n      setErr(true);\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logo\",\n        children: \"Kim Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"display name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            display: \"none\"\n          },\n          type: \"file\",\n          id: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Add,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add an avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: loading,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), loading && \"Uploading and compressing the image please wait...\", err && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Something went wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this), console.log(err)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You do have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"1FzsGwIswnWuOUVEUjT/RJR2bp0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register; // import React , {useState} from 'react'\n// import Add from '../img/addAvatar.png'\n// import { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\n// import { auth, db, storage } from '../Firebase';\n// import { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\n// import { doc, setDoc } from \"firebase/firestore\"; \n// import { useNavigate, Link } from 'react-router-dom';\n// const Register = () => {\n//   const [err, setErr] = useState(false)\n//   const navigate = useNavigate()\n//   const handleSubmit = async (e) => {\n//     e.preventDefault()\n//     // console.log(e.target[0].value)\n//     const displayName = e.target[0].value\n//     const email = e.target[1].value\n//     const password = e.target[2].value\n//     const file = e.target[3].files[0]\n//     try{\n//         const res = await createUserWithEmailAndPassword(auth, email, password)\n//         const storageRef = ref(storage, displayName);\n//         const uploadTask = uploadBytesResumable(storageRef, file);\n//         // Register three observers:\n//         uploadTask.on('state_changed', \n//         (error) => {\n//           setErr(true)\n//         }, \n//         () => {\n//         getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n//           await updateProfile(res.user, {\n//             displayName,\n//             photoURL: downloadURL,\n//         });\n//           await setDoc(doc(db , \"users\", res.user.uid),{\n//             uid: res.user.uid,\n//             displayName,\n//             email,\n//             photoURL: downloadURL,\n//         })\n//           await setDoc(doc(db, \"userChats\", res.user.uid),{})\n//           navigate(\"/\")\n//       });\n//     }\n//   );\n//       }catch(err) {\n//         setErr(true)\n//     }\n//   }\n//   return (\n//     <div className='formContainer'>\n//         <div className='formWrapper'>\n//             <span className='logo'>Kim Chat</span>\n//             <span className='title'>Register</span>\n//             <form onSubmit={handleSubmit}>\n//                 <input type=\"text\" placeholder=\"display name\" />\n//                 <input type=\"email\" placeholder=\"email\"/>\n//                 <input type=\"password\" placeholder=\"password\"/>\n//                 <input style={{display: \"none\"}} type=\"file\" id='file'/>\n//                 <label htmlFor='file'>\n//                     <img src={Add} alt=\"\" />\n//                     <span>Add an avatar</span>\n//                 </label>\n//                 <button>Sign Up</button>\n//                 {err && <span>Something went wrong</span>}\n//                 {console.log(err)}\n//             </form>\n//             <p>You do have an account?\n//             <Link to=\"/login\">\n//                 Login\n//             </Link>\n//             </p>\n//         </div>\n//     </div>\n//   )\n// }\n// export default Register\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Add","createUserWithEmailAndPassword","updateProfile","auth","db","storage","ref","uploadBytesResumable","getDownloadURL","doc","setDoc","useNavigate","Link","Register","err","setErr","loading","setLoading","navigate","handleSubmit","e","preventDefault","displayName","target","value","email","password","file","files","res","date","Date","getTime","storageRef","then","downloadURL","user","photoURL","uid","console","log","display"],"sources":["D:/Software/Web Development/Projects/4.Chat-app using React+firebase+scss/chatting-app/src/pages/Register.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import Add from \"../img/addAvatar.png\";\r\n// import { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\r\n// import { auth, db, storage } from \"../firebase\";\r\n// import { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\n// import { doc, setDoc } from \"firebase/firestore\";\r\n// import { useNavigate, Link } from \"react-router-dom\";\r\n\r\n// const Register = () => {\r\n//   const [err, setErr] = useState(false);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     setLoading(true);\r\n//     e.preventDefault();\r\n//     const displayName = e.target[0].value;\r\n//     const email = e.target[1].value;\r\n//     const password = e.target[2].value;\r\n//     const file = e.target[3].files[0];\r\n\r\n//     try {\r\n//       //Create user\r\n//       const res = await createUserWithEmailAndPassword(auth, email, password);\r\n\r\n//       //Create a unique image name\r\n//       const date = new Date().getTime();\r\n//       const storageRef = ref(storage, `${displayName + date}`);\r\n\r\n//       await uploadBytesResumable(storageRef, file).then(() => {\r\n//         getDownloadURL(storageRef).then(async (downloadURL) => {\r\n//           try {\r\n//             //Update profile\r\n//             await updateProfile(res.user, {\r\n//               displayName,\r\n//               photoURL: downloadURL,\r\n//             });\r\n//             //create user on firestore\r\n//             await setDoc(doc(db, \"users\", res.user.uid), {\r\n//               uid: res.user.uid,\r\n//               displayName,\r\n//               email,\r\n//               photoURL: downloadURL,\r\n//             });\r\n\r\n//             //create empty user chats on firestore\r\n//             await setDoc(doc(db, \"userChats\", res.user.uid), {});\r\n//             navigate(\"/\");\r\n//           } catch (err) {\r\n//             console.log(err);\r\n//             setErr(true);\r\n//             setLoading(false);\r\n//           }\r\n//         });\r\n//       });\r\n//     } catch (err) {\r\n//       setErr(true);\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"formContainer\">\r\n//       <div className=\"formWrapper\">\r\n//         <span className=\"logo\">Lama Chat</span>\r\n//         <span className=\"title\">Register</span>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <input required type=\"text\" placeholder=\"display name\" />\r\n//           <input required type=\"email\" placeholder=\"email\" />\r\n//           <input required type=\"password\" placeholder=\"password\" />\r\n//           <input required style={{ display: \"none\" }} type=\"file\" id=\"file\" />\r\n//           <label htmlFor=\"file\">\r\n//             <img src={Add} alt=\"\" />\r\n//             <span>Add an avatar</span>\r\n//           </label>\r\n//           <button disabled={loading}>Sign up</button>\r\n//           {loading && \"Uploading and compressing the image please wait...\"}\r\n//           {err && <span>Something went wrong</span>}\r\n//         </form>\r\n//         <p>\r\n//           You do have an account? <Link to=\"/login\">Login</Link>\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React , {useState} from 'react'\r\nimport Add from '../img/addAvatar.png'\r\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\r\nimport { auth, db, storage } from '../firebase';\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { doc, setDoc } from \"firebase/firestore\"; \r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\n\r\nconst Register = () => {\r\n  const [err, setErr] = useState(false)\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate()\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    // console.log(e.target[0].value)\r\n    const displayName = e.target[0].value\r\n    const email = e.target[1].value\r\n    const password = e.target[2].value\r\n    const file = e.target[3].files[0]\r\n\r\n    try{\r\n        const res = await createUserWithEmailAndPassword(auth, email, password)\r\n        const date = new Date().getTime();\r\n        const storageRef = ref(storage, `${displayName + date}`);\r\n\r\n        await uploadBytesResumable(storageRef, file).then(() => {\r\n          getDownloadURL(storageRef).then(async (downloadURL) => {\r\n            try {\r\n              //Update profile\r\n            await updateProfile(res.user, {\r\n              displayName,\r\n              photoURL: downloadURL,\r\n            });\r\n            //create user on firestore\r\n            await setDoc(doc(db, \"users\", res.user.uid), {\r\n              uid: res.user.uid,\r\n              displayName,\r\n              email,\r\n              photoURL: downloadURL,\r\n            });\r\n            //create empty user chats on firestore\r\n            await setDoc(doc(db, \"userChats\", res.user.uid), {});\r\n              navigate(\"/\");\r\n} catch (err) {\r\nconsole.log(err);\r\nsetErr(true);\r\nsetLoading(false);\r\n}\r\n});\r\n});\r\n} catch (err) {\r\nsetErr(true);\r\nsetLoading(false);\r\n}\r\n};\r\n\r\n  return (\r\n    <div className='formContainer'>\r\n        <div className='formWrapper'>\r\n            <span className='logo'>Kim Chat</span>\r\n            <span className='title'>Register</span>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" placeholder=\"display name\" />\r\n                <input type=\"email\" placeholder=\"email\"/>\r\n                <input type=\"password\" placeholder=\"password\"/>\r\n                <input style={{display: \"none\"}} type=\"file\" id='file'/>\r\n                <label htmlFor='file'>\r\n                    <img src={Add} alt=\"\" />\r\n                    <span>Add an avatar</span>\r\n                </label>\r\n                <button disabled={loading}>Sign Up</button>\r\n                {loading && \"Uploading and compressing the image please wait...\"}\r\n                {err && <span>Something went wrong</span>}\r\n                {console.log(err)}\r\n            </form>\r\n            <p>You do have an account?\r\n            <Link to=\"/login\">\r\n                Login\r\n            </Link>\r\n            </p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React , {useState} from 'react'\r\n// import Add from '../img/addAvatar.png'\r\n// import { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\r\n// import { auth, db, storage } from '../Firebase';\r\n// import { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\n// import { doc, setDoc } from \"firebase/firestore\"; \r\n// import { useNavigate, Link } from 'react-router-dom';\r\n\r\n// const Register = () => {\r\n//   const [err, setErr] = useState(false)\r\n//   const navigate = useNavigate()\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault()\r\n//     // console.log(e.target[0].value)\r\n//     const displayName = e.target[0].value\r\n//     const email = e.target[1].value\r\n//     const password = e.target[2].value\r\n//     const file = e.target[3].files[0]\r\n\r\n//     try{\r\n//         const res = await createUserWithEmailAndPassword(auth, email, password)\r\n\r\n//         const storageRef = ref(storage, displayName);\r\n\r\n//         const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n//         // Register three observers:\r\n//         uploadTask.on('state_changed', \r\n\r\n//         (error) => {\r\n//           setErr(true)\r\n//         }, \r\n//         () => {\r\n//         getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\r\n//           await updateProfile(res.user, {\r\n//             displayName,\r\n//             photoURL: downloadURL,\r\n//         });\r\n//           await setDoc(doc(db , \"users\", res.user.uid),{\r\n//             uid: res.user.uid,\r\n//             displayName,\r\n//             email,\r\n//             photoURL: downloadURL,\r\n//         })\r\n//           await setDoc(doc(db, \"userChats\", res.user.uid),{})\r\n//           navigate(\"/\")\r\n//       });\r\n//     }\r\n//   );\r\n\r\n//       }catch(err) {\r\n//         setErr(true)\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <div className='formContainer'>\r\n//         <div className='formWrapper'>\r\n//             <span className='logo'>Kim Chat</span>\r\n//             <span className='title'>Register</span>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <input type=\"text\" placeholder=\"display name\" />\r\n//                 <input type=\"email\" placeholder=\"email\"/>\r\n//                 <input type=\"password\" placeholder=\"password\"/>\r\n//                 <input style={{display: \"none\"}} type=\"file\" id='file'/>\r\n//                 <label htmlFor='file'>\r\n//                     <img src={Add} alt=\"\" />\r\n//                     <span>Add an avatar</span>\r\n//                 </label>\r\n//                 <button>Sign Up</button>\r\n//                 {err && <span>Something went wrong</span>}\r\n//                 {console.log(err)}\r\n//             </form>\r\n//             <p>You do have an account?\r\n//             <Link to=\"/login\">\r\n//                 Login\r\n//             </Link>\r\n//             </p>\r\n//         </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Register\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}