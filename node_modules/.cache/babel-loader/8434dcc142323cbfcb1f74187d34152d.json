{"ast":null,"code":"import _defineProperty from\"D:/Software/Web Development/Projects/4.Chat-app using React+firebase+scss/chatting-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _regeneratorRuntime from\"D:/Software/Web Development/Projects/4.Chat-app using React+firebase+scss/chatting-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/Software/Web Development/Projects/4.Chat-app using React+firebase+scss/chatting-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/Software/Web Development/Projects/4.Chat-app using React+firebase+scss/chatting-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useState}from\"react\";import{collection,query,where,getDocs,setDoc,doc,updateDoc,serverTimestamp,getDoc}from\"firebase/firestore\";import{db}from\"../firebase\";import{AuthContext}from\"../context/AuthContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Search=function Search(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),user=_useState4[0],setUser=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),err=_useState6[0],setErr=_useState6[1];var _useContext=useContext(AuthContext),currentUser=_useContext.currentUser;var handleSearch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var q,querySnapshot;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:q=query(collection(db,\"users\"),where(\"displayName\",\"==\",username));_context.prev=1;_context.next=4;return getDocs(q);case 4:querySnapshot=_context.sent;querySnapshot.forEach(function(doc){setUser(doc.data());});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);setErr(true);case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function handleSearch(){return _ref.apply(this,arguments);};}();var handleKey=function handleKey(e){e.code===\"Enter\"&&handleSearch();};var handleSelect=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var combinedId,res,_updateDoc,_updateDoc2;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0://check whether the group(chats in firestore) exists, if not create\ncombinedId=currentUser.uid>user.uid?currentUser.uid+user.uid:user.uid+currentUser.uid;_context2.prev=1;_context2.next=4;return getDoc(doc(db,\"chats\",combinedId));case 4:res=_context2.sent;if(res.exists()){_context2.next=12;break;}_context2.next=8;return setDoc(doc(db,\"chats\",combinedId),{messages:[]});case 8:_context2.next=10;return updateDoc(doc(db,\"userChats\",currentUser.uid),(_updateDoc={},_defineProperty(_updateDoc,combinedId+\".userInfo\",{uid:user.uid,displayName:user.displayName,photoURL:user.photoURL}),_defineProperty(_updateDoc,combinedId+\".date\",serverTimestamp()),_updateDoc));case 10:_context2.next=12;return updateDoc(doc(db,\"userChats\",user.uid),(_updateDoc2={},_defineProperty(_updateDoc2,combinedId+\".userInfo\",{uid:currentUser.uid,displayName:currentUser.displayName,photoURL:currentUser.photoURL}),_defineProperty(_updateDoc2,combinedId+\".date\",serverTimestamp()),_updateDoc2));case 12:_context2.next=16;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](1);case 16:setUser(null);setUsername(\"\");case 18:case\"end\":return _context2.stop();}}},_callee2,null,[[1,14]]);}));return function handleSelect(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"search\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"searchForm\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Find a user\",onKeyDown:handleKey,onChange:function onChange(e){return setUsername(e.target.value);},value:username})}),err&&/*#__PURE__*/_jsx(\"span\",{children:\"User not found!\"}),user&&/*#__PURE__*/_jsxs(\"div\",{className:\"userChat\",onClick:handleSelect,children:[/*#__PURE__*/_jsx(\"img\",{src:user.photoURL,alt:\"\"}),/*#__PURE__*/_jsx(\"div\",{className:\"userChatInfo\",children:/*#__PURE__*/_jsx(\"span\",{children:user.displayName})})]})]});};export default Search;// import React, { useContext, useState } from \"react\";\n// import {\n//   collection,\n//   query,\n//   where,\n//   getDocs,\n//   setDoc,\n//   doc,\n//   updateDoc,\n//   serverTimestamp,\n//   getDoc,\n// } from \"firebase/firestore\";\n// import { db } from \"../firebase\";\n// import { AuthContext } from \"../context/AuthContext\";\n// const Search = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [user, setUser] = useState(null);\n//   const [err, setErr] = useState(false);\n//   const { currentUser } = useContext(AuthContext);\n//   const handleSearch = async () => {\n//     const q = query(\n//       collection(db, \"users\"),\n//       where(\"displayName\", \"==\", username)\n//     );\n//     try {\n//       const querySnapshot = await getDocs(q);\n//       querySnapshot.forEach((doc) => {\n//         setUser(doc.data());\n//       });\n//     } catch (err) {\n//       setErr(true);\n//     }\n//   };\n//   const handleKey = (e) => {\n//     e.code === \"Enter\" && handleSearch();\n//   };\n//   const handleSelect = async () => {\n//     //check whether the group(chats in firestore) exists, if not create\n//     const combinedId =\n//       currentUser.uid > user.uid\n//         ? currentUser.uid + user.uid\n//         : user.uid + currentUser.uid;\n//     try {\n//       const res = await getDoc(doc(db, \"chats\", combinedId));\n//       if (!res.exists()) {\n//         //create a chat in chats collection\n//         await setDoc(doc(db, \"chats\", combinedId), { messages: [] });\n//         //create user chats\n//         await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n//           [combinedId + \".userInfo\"]: {\n//             uid: user.uid,\n//             displayName: user.displayName,\n//             photoURL: user.photoURL,\n//           },\n//           [combinedId + \".date\"]: serverTimestamp(),\n//         });\n//         await updateDoc(doc(db, \"userChats\", user.uid), {\n//           [combinedId + \".userInfo\"]: {\n//             uid: currentUser.uid,\n//             displayName: currentUser.displayName,\n//             photoURL: currentUser.photoURL,\n//           },\n//           [combinedId + \".date\"]: serverTimestamp(),\n//         });\n//       }\n//     } catch (err) {}\n//     setUser(null);\n//     setUsername(\"\")\n//   };\n//   return (\n//     <div className=\"search\">\n//       <div className=\"searchForm\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Find a user\"\n//           onKeyDown={handleKey}\n//           onChange={(e) => setUsername(e.target.value)}\n//           value={username}\n//         />\n//       </div>\n//       {err && <span>User not found!</span>}\n//       {user && (\n//         <div className=\"userChat\" onClick={handleSelect}>\n//           <img src={user.photoURL} alt=\"\" />\n//           <div className=\"userChatInfo\">\n//             <span>{user.displayName}</span>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n// export default Search\n// import React, { useContext, useState } from \"react\";\n// import {\n//   collection,\n//   query,\n//   where,\n//   getDocs,\n//   setDoc,\n//   doc,\n//   updateDoc,\n//   serverTimestamp,\n//   getDoc,\n// } from \"firebase/firestor\";\n// import { db } from \"../firebase\";\n// import { AuthContext } from \"../context/AuthContext\";\n// //import { getDocs } from \"firebase/firestore\";\n// const Search = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [user, setUser] = useState(null);\n//   const [err, setErr] = useState(false);\n//   const { currentUser } = useContext(AuthContext);\n//   const handleSearch = async () => {\n//     const q = query(\n//       collection(db, \"users\"),\n//       where(\"displayName\", \"==\", username)\n//     );\n//     try {\n//       const querySnapshot = await getDocs(q);\n//       querySnapshot.forEach((doc) => {\n//         setUser(doc.data());\n//       });\n//     } catch (err) {\n//       setErr(true);\n//     }\n//   };\n//   const handleKey = (e) => {\n//     e.code === \"Enter\" && handleSearch();\n//   };\n//   const handleSelect = async () => {\n//     //check whether the group(chats in firestore) exists, if not create\n//     const combinedId =\n//       currentUser.uid > user.uid\n//         ? currentUser.uid + user.uid\n//         : user.uid + currentUser.uid;\n//     try {\n//       const res = await getDoc(doc(db, \"chats\", combinedId));\n//       if (!res.exists()) {\n//         //create a chat in chats collection\n//         await setDoc(doc(db, \"chats\", combinedId), { messages: [] });\n//         //create user chats\n//         await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n//           [combinedId + \".userInfo\"]: {\n//             uid: user.uid,\n//             displayName: user.displayName,\n//             photoURL: user.photoURL,\n//           },\n//           [combinedId + \".date\"]: serverTimestamp(),\n//         });\n//         await updateDoc(doc(db, \"userChats\", user.uid), {\n//           [combinedId + \".userInfo\"]: {\n//             uid: currentUser.uid,\n//             displayName: currentUser.displayName,\n//             photoURL: currentUser.photoURL,\n//           },\n//           [combinedId + \".date\"]: serverTimestamp(),\n//         });\n//       }\n//     } catch (err) {}\n//     setUser(null);\n//     setUsername(\"\")\n//   };\n//   return (\n//     <div className=\"search\">\n//       <div className=\"searchForm\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Find a user\"\n//           onKeyDown={handleKey}\n//           onChange={(e) => setUsername(e.target.value)}\n//           value={username}\n//         />\n//       </div>\n//       {err && <span>User not found!</span>}\n//       {user && (\n//         <div className=\"userChat\" onClick={handleSelect}>\n//           <img src={user.photoURL} alt=\"\" />\n//           <div className=\"userChatInfo\">\n//             <span>{user.displayName}</span>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n// export default Search;\n// import React from 'react'\n// import { useState } from 'react'\n// import { collection, doc, getDoc, query, serverTimestamp, setDoc, updateDoc, where } from \"firebase/firestore\";\n// import { db } from '../Firebase'\n// import { async } from '@firebase/util';\n// import { useContext } from 'react';\n// import { AuthContext } from '../context/AuthContext';\n// const Search = () => {\n//   const [] = useState(\"\")\n//   const [user, setUser] = useState(null)\n//   const [err, setErr] = useState(false)\n//   const {currentUser} = useContext(AuthContext)\n//   const handleSearch = async () => {\n//     const q = query(\n//       collection(db, \"users\"),\n//       where(\"displayName\", \"==\", username)\n//     );\n//     try{\n//       const querySnapshot = await getDoc(q);\n//         querySnapshot.forEach((doc) => {\n//         setUser(doc.data())\n//     });\n//     }catch(err){\n//       setErr(true)\n//     }\n//   };\n//   const handleKey = e => {\n//     e.code === \"Enter\" && handleSearch();\n//   }\n//   const handleSelect = async () => {\n//     // check whether the group(chats in firestore) exists, if not create\n//     const combinedId = currentUser.uid > user.uid \n//     ? currentUser.uid + user.uid \n//     : user.uid + currentUser.uid\n//     try{\n//       const res = await getDoc(doc(db, \"chats\", combinedId))\n//       if(!res.exists()){\n//         // create a chat in chats collection\n//         await setDoc(doc, (db, \"chats\", combinedId), {messages: []});\n//         // create user chats\n//         await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n//           [combinedId+\".userInfo\"]: {\n//             uid:user.uid,\n//             displayName: user.displayName,\n//             photoURL: user.photoURL\n//           },\n//           [combinedId+\".date\"]: serverTimestamp()\n//         });\n//         // I m do the same thing for the other user\n//         await updateDoc(doc(db, \"userChats\", user.uid), {\n//           [combinedId+\".userInfo\"]: {\n//             uid:currentUser.uid,\n//             displayName: currentUser.displayName,\n//             photoURL: currentUser.photoURL\n//           },\n//           [combinedId+\".date\"]: serverTimestamp()\n//         });\n//       }\n//   }catch(err){\n//     // create user chats}\n//     setUser(null)\n//     setUsername(\"\")\n//   };\n//   return (\n//     <div className='search'>\n//       <div className='searchForm'>\n//         <input type=\"text\" placeholder='Find a user'\n//         onKeyDown={handleKey}\n//         onChange={e=>setUsername(e.target.value)}\n//         value={username}\n//         />\n//       </div>\n//       {err && <span>User not found!</span>}\n//       {user && (<div className='userChat' onClick={handleSelect}>\n//         <img src={user.photoURL} />\n//         <div className='userChatInfo'>\n//             <span>{user.displayName}</span>\n//         </div>\n//       </div>)}\n//     </div>\n//   )\n// }\n// export default Search\n//","map":{"version":3,"names":["React","useContext","useState","collection","query","where","getDocs","setDoc","doc","updateDoc","serverTimestamp","getDoc","db","AuthContext","Search","username","setUsername","user","setUser","err","setErr","currentUser","handleSearch","q","querySnapshot","forEach","data","handleKey","e","code","handleSelect","combinedId","uid","res","exists","messages","displayName","photoURL","target","value"],"sources":["D:/Software/Web Development/Projects/4.Chat-app using React+firebase+scss/chatting-app/src/components/Search.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  setDoc,\r\n  doc,\r\n  updateDoc,\r\n  serverTimestamp,\r\n  getDoc,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nconst Search = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const [err, setErr] = useState(false);\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const handleSearch = async () => {\r\n    const q = query(\r\n      collection(db, \"users\"),\r\n      where(\"displayName\", \"==\", username)\r\n    );\r\n\r\n    try {\r\n      const querySnapshot = await getDocs(q);\r\n      querySnapshot.forEach((doc) => {\r\n        setUser(doc.data());\r\n      });\r\n    } catch (err) {\r\n      setErr(true);\r\n    }\r\n  };\r\n\r\n  const handleKey = (e) => {\r\n    e.code === \"Enter\" && handleSearch();\r\n  };\r\n\r\n  const handleSelect = async () => {\r\n    //check whether the group(chats in firestore) exists, if not create\r\n    const combinedId =\r\n      currentUser.uid > user.uid\r\n        ? currentUser.uid + user.uid\r\n        : user.uid + currentUser.uid;\r\n    try {\r\n      const res = await getDoc(doc(db, \"chats\", combinedId));\r\n\r\n      if (!res.exists()) {\r\n        //create a chat in chats collection\r\n        await setDoc(doc(db, \"chats\", combinedId), { messages: [] });\r\n\r\n        //create user chats\r\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\r\n          [combinedId + \".userInfo\"]: {\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            photoURL: user.photoURL,\r\n          },\r\n          [combinedId + \".date\"]: serverTimestamp(),\r\n        });\r\n\r\n        await updateDoc(doc(db, \"userChats\", user.uid), {\r\n          [combinedId + \".userInfo\"]: {\r\n            uid: currentUser.uid,\r\n            displayName: currentUser.displayName,\r\n            photoURL: currentUser.photoURL,\r\n          },\r\n          [combinedId + \".date\"]: serverTimestamp(),\r\n        });\r\n      }\r\n    } catch (err) {}\r\n\r\n    setUser(null);\r\n    setUsername(\"\")\r\n  };\r\n  return (\r\n    <div className=\"search\">\r\n      <div className=\"searchForm\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Find a user\"\r\n          onKeyDown={handleKey}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          value={username}\r\n        />\r\n      </div>\r\n      {err && <span>User not found!</span>}\r\n      {user && (\r\n        <div className=\"userChat\" onClick={handleSelect}>\r\n          <img src={user.photoURL} alt=\"\" />\r\n          <div className=\"userChatInfo\">\r\n            <span>{user.displayName}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useContext, useState } from \"react\";\r\n// import {\r\n//   collection,\r\n//   query,\r\n//   where,\r\n//   getDocs,\r\n//   setDoc,\r\n//   doc,\r\n//   updateDoc,\r\n//   serverTimestamp,\r\n//   getDoc,\r\n// } from \"firebase/firestore\";\r\n// import { db } from \"../firebase\";\r\n// import { AuthContext } from \"../context/AuthContext\";\r\n// const Search = () => {\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [user, setUser] = useState(null);\r\n//   const [err, setErr] = useState(false);\r\n\r\n//   const { currentUser } = useContext(AuthContext);\r\n\r\n//   const handleSearch = async () => {\r\n//     const q = query(\r\n//       collection(db, \"users\"),\r\n//       where(\"displayName\", \"==\", username)\r\n//     );\r\n\r\n//     try {\r\n//       const querySnapshot = await getDocs(q);\r\n//       querySnapshot.forEach((doc) => {\r\n//         setUser(doc.data());\r\n//       });\r\n//     } catch (err) {\r\n//       setErr(true);\r\n//     }\r\n//   };\r\n\r\n//   const handleKey = (e) => {\r\n//     e.code === \"Enter\" && handleSearch();\r\n//   };\r\n\r\n//   const handleSelect = async () => {\r\n//     //check whether the group(chats in firestore) exists, if not create\r\n//     const combinedId =\r\n//       currentUser.uid > user.uid\r\n//         ? currentUser.uid + user.uid\r\n//         : user.uid + currentUser.uid;\r\n//     try {\r\n//       const res = await getDoc(doc(db, \"chats\", combinedId));\r\n\r\n//       if (!res.exists()) {\r\n//         //create a chat in chats collection\r\n//         await setDoc(doc(db, \"chats\", combinedId), { messages: [] });\r\n\r\n//         //create user chats\r\n//         await updateDoc(doc(db, \"userChats\", currentUser.uid), {\r\n//           [combinedId + \".userInfo\"]: {\r\n//             uid: user.uid,\r\n//             displayName: user.displayName,\r\n//             photoURL: user.photoURL,\r\n//           },\r\n//           [combinedId + \".date\"]: serverTimestamp(),\r\n//         });\r\n\r\n//         await updateDoc(doc(db, \"userChats\", user.uid), {\r\n//           [combinedId + \".userInfo\"]: {\r\n//             uid: currentUser.uid,\r\n//             displayName: currentUser.displayName,\r\n//             photoURL: currentUser.photoURL,\r\n//           },\r\n//           [combinedId + \".date\"]: serverTimestamp(),\r\n//         });\r\n//       }\r\n//     } catch (err) {}\r\n\r\n//     setUser(null);\r\n//     setUsername(\"\")\r\n//   };\r\n//   return (\r\n//     <div className=\"search\">\r\n//       <div className=\"searchForm\">\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Find a user\"\r\n//           onKeyDown={handleKey}\r\n//           onChange={(e) => setUsername(e.target.value)}\r\n//           value={username}\r\n//         />\r\n//       </div>\r\n//       {err && <span>User not found!</span>}\r\n//       {user && (\r\n//         <div className=\"userChat\" onClick={handleSelect}>\r\n//           <img src={user.photoURL} alt=\"\" />\r\n//           <div className=\"userChatInfo\">\r\n//             <span>{user.displayName}</span>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Search\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useContext, useState } from \"react\";\r\n// import {\r\n//   collection,\r\n//   query,\r\n//   where,\r\n//   getDocs,\r\n//   setDoc,\r\n//   doc,\r\n//   updateDoc,\r\n//   serverTimestamp,\r\n//   getDoc,\r\n// } from \"firebase/firestor\";\r\n// import { db } from \"../firebase\";\r\n// import { AuthContext } from \"../context/AuthContext\";\r\n// //import { getDocs } from \"firebase/firestore\";\r\n\r\n// const Search = () => {\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [user, setUser] = useState(null);\r\n//   const [err, setErr] = useState(false);\r\n\r\n//   const { currentUser } = useContext(AuthContext);\r\n\r\n//   const handleSearch = async () => {\r\n//     const q = query(\r\n//       collection(db, \"users\"),\r\n//       where(\"displayName\", \"==\", username)\r\n//     );\r\n\r\n//     try {\r\n//       const querySnapshot = await getDocs(q);\r\n//       querySnapshot.forEach((doc) => {\r\n//         setUser(doc.data());\r\n//       });\r\n//     } catch (err) {\r\n//       setErr(true);\r\n//     }\r\n//   };\r\n\r\n//   const handleKey = (e) => {\r\n//     e.code === \"Enter\" && handleSearch();\r\n//   };\r\n\r\n//   const handleSelect = async () => {\r\n//     //check whether the group(chats in firestore) exists, if not create\r\n//     const combinedId =\r\n//       currentUser.uid > user.uid\r\n//         ? currentUser.uid + user.uid\r\n//         : user.uid + currentUser.uid;\r\n//     try {\r\n//       const res = await getDoc(doc(db, \"chats\", combinedId));\r\n\r\n//       if (!res.exists()) {\r\n//         //create a chat in chats collection\r\n//         await setDoc(doc(db, \"chats\", combinedId), { messages: [] });\r\n\r\n//         //create user chats\r\n//         await updateDoc(doc(db, \"userChats\", currentUser.uid), {\r\n//           [combinedId + \".userInfo\"]: {\r\n//             uid: user.uid,\r\n//             displayName: user.displayName,\r\n//             photoURL: user.photoURL,\r\n//           },\r\n//           [combinedId + \".date\"]: serverTimestamp(),\r\n//         });\r\n\r\n//         await updateDoc(doc(db, \"userChats\", user.uid), {\r\n//           [combinedId + \".userInfo\"]: {\r\n//             uid: currentUser.uid,\r\n//             displayName: currentUser.displayName,\r\n//             photoURL: currentUser.photoURL,\r\n//           },\r\n//           [combinedId + \".date\"]: serverTimestamp(),\r\n//         });\r\n//       }\r\n//     } catch (err) {}\r\n\r\n//     setUser(null);\r\n//     setUsername(\"\")\r\n//   };\r\n//   return (\r\n//     <div className=\"search\">\r\n//       <div className=\"searchForm\">\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Find a user\"\r\n//           onKeyDown={handleKey}\r\n//           onChange={(e) => setUsername(e.target.value)}\r\n//           value={username}\r\n//         />\r\n//       </div>\r\n//       {err && <span>User not found!</span>}\r\n//       {user && (\r\n//         <div className=\"userChat\" onClick={handleSelect}>\r\n//           <img src={user.photoURL} alt=\"\" />\r\n//           <div className=\"userChatInfo\">\r\n//             <span>{user.displayName}</span>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Search;\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n// import { useState } from 'react'\r\n// import { collection, doc, getDoc, query, serverTimestamp, setDoc, updateDoc, where } from \"firebase/firestore\";\r\n// import { db } from '../Firebase'\r\n// import { async } from '@firebase/util';\r\n// import { useContext } from 'react';\r\n// import { AuthContext } from '../context/AuthContext';\r\n\r\n// const Search = () => {\r\n//   const [] = useState(\"\")\r\n//   const [user, setUser] = useState(null)\r\n//   const [err, setErr] = useState(false)\r\n\r\n//   const {currentUser} = useContext(AuthContext)\r\n\r\n//   const handleSearch = async () => {\r\n//     const q = query(\r\n//       collection(db, \"users\"),\r\n//       where(\"displayName\", \"==\", username)\r\n//     );\r\n\r\n//     try{\r\n//       const querySnapshot = await getDoc(q);\r\n//         querySnapshot.forEach((doc) => {\r\n//         setUser(doc.data())\r\n//     });\r\n\r\n//     }catch(err){\r\n//       setErr(true)\r\n//     }\r\n//   };\r\n//   const handleKey = e => {\r\n//     e.code === \"Enter\" && handleSearch();\r\n//   }\r\n\r\n//   const handleSelect = async () => {\r\n//     // check whether the group(chats in firestore) exists, if not create\r\n//     const combinedId = currentUser.uid > user.uid \r\n//     ? currentUser.uid + user.uid \r\n//     : user.uid + currentUser.uid\r\n//     try{\r\n//       const res = await getDoc(doc(db, \"chats\", combinedId))\r\n\r\n//       if(!res.exists()){\r\n//         // create a chat in chats collection\r\n//         await setDoc(doc, (db, \"chats\", combinedId), {messages: []});\r\n//         // create user chats\r\n//         await updateDoc(doc(db, \"userChats\", currentUser.uid), {\r\n//           [combinedId+\".userInfo\"]: {\r\n//             uid:user.uid,\r\n//             displayName: user.displayName,\r\n//             photoURL: user.photoURL\r\n//           },\r\n//           [combinedId+\".date\"]: serverTimestamp()\r\n//         });\r\n\r\n//         // I m do the same thing for the other user\r\n//         await updateDoc(doc(db, \"userChats\", user.uid), {\r\n//           [combinedId+\".userInfo\"]: {\r\n//             uid:currentUser.uid,\r\n//             displayName: currentUser.displayName,\r\n//             photoURL: currentUser.photoURL\r\n//           },\r\n//           [combinedId+\".date\"]: serverTimestamp()\r\n//         });\r\n//       }\r\n//   }catch(err){\r\n//     // create user chats}\r\n  \r\n//     setUser(null)\r\n//     setUsername(\"\")\r\n//   };\r\n\r\n//   return (\r\n//     <div className='search'>\r\n//       <div className='searchForm'>\r\n//         <input type=\"text\" placeholder='Find a user'\r\n//         onKeyDown={handleKey}\r\n//         onChange={e=>setUsername(e.target.value)}\r\n//         value={username}\r\n//         />\r\n//       </div>\r\n//       {err && <span>User not found!</span>}\r\n//       {user && (<div className='userChat' onClick={handleSelect}>\r\n//         <img src={user.photoURL} />\r\n//         <div className='userChatInfo'>\r\n//             <span>{user.displayName}</span>\r\n//         </div>\r\n//       </div>)}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Search\r\n// "],"mappings":"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},"metadata":{},"sourceType":"module"}