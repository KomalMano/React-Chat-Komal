{"ast":null,"code":"var _jsxFileName = \"D:\\\\Softwares Working\\\\All data\\\\Web Develpment\\\\Projects\\\\Chat-app using React+firebase\\\\chatting-app\\\\src\\\\components\\\\Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { collection, doc, getDocs, getDoc, query, serverTimestamp, setDoc, updateDoc, where } from \"firebase/firestore\";\nimport { db } from '../Firebase';\nimport { async } from '@firebase/util';\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [err, setErr] = useState(false);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  const handleSearch = async () => {\n    const q = query(collection(db, \"users\"), where(\"displayName\", \"==\", username));\n\n    try {\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        setUser(doc.data());\n      });\n    } catch (err) {\n      setErr(true);\n    }\n  };\n\n  const handleKey = e => {\n    e.code === \"Enter\" && handleSearch();\n  };\n\n  const handleSelect = async () => {\n    // check whether the group(chats in firestore) exists, if not create\n    const combinedId = currentUser.uid > user.uid ? currentUser.uid + user.uid : user.uid + currentUser.uid;\n\n    try {\n      const res = await getDoc(doc(db, \"chats\", combinedId));\n\n      if (!res.exists()) {\n        // create a chat in chats collection\n        await setDoc(doc(db, \"chats\", combinedId), {\n          messages: []\n        }); // create user chats\n\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL\n          },\n          [combinedId + \".date\"]: serverTimestamp()\n        }); // I m do the same thing for the other user\n\n        await updateDoc(doc(db, \"userChats\", user.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: currentUser.uid,\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL\n          },\n          [combinedId + \".date\"]: serverTimestamp()\n        });\n      }\n    } catch (err) {\n      // create user chats}\n      setUser(null);\n      setUsername(\"\");\n    }\n\n    ;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchForm\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Find a user\",\n          onKeyDown: handleKey,\n          onChange: e => setUsername(e.target.value),\n          value: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), err && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"User not found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChat\",\n        onClick: handleSelect,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.photoURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userChatInfo\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this);\n  };\n};\n\n_s(Search, \"jFBT47zuanuiMzvIPx6o7a06B0w=\");\n\n_c = Search;\nexport default Search; // import React from 'react'\n// import { useState } from 'react'\n// import { collection, doc, getDoc, query, serverTimestamp, setDoc, updateDoc, where } from \"firebase/firestore\";\n// import { db } from '../Firebase'\n// import { async } from '@firebase/util';\n// import { useContext } from 'react';\n// import { AuthContext } from '../context/AuthContext';\n// const Search = () => {\n//   const [] = useState(\"\")\n//   const [user, setUser] = useState(null)\n//   const [err, setErr] = useState(false)\n//   const {currentUser} = useContext(AuthContext)\n//   const handleSearch = async () => {\n//     const q = query(\n//       collection(db, \"users\"),\n//       where(\"displayName\", \"==\", username)\n//     );\n//     try{\n//       const querySnapshot = await getDoc(q);\n//         querySnapshot.forEach((doc) => {\n//         setUser(doc.data())\n//     });\n//     }catch(err){\n//       setErr(true)\n//     }\n//   };\n//   const handleKey = e => {\n//     e.code === \"Enter\" && handleSearch();\n//   }\n//   const handleSelect = async () => {\n//     // check whether the group(chats in firestore) exists, if not create\n//     const combinedId = currentUser.uid > user.uid \n//     ? currentUser.uid + user.uid \n//     : user.uid + currentUser.uid\n//     try{\n//       const res = await getDoc(doc(db, \"chats\", combinedId))\n//       if(!res.exists()){\n//         // create a chat in chats collection\n//         await setDoc(doc, (db, \"chats\", combinedId), {messages: []});\n//         // create user chats\n//         await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n//           [combinedId+\".userInfo\"]: {\n//             uid:user.uid,\n//             displayName: user.displayName,\n//             photoURL: user.photoURL\n//           },\n//           [combinedId+\".date\"]: serverTimestamp()\n//         });\n//         // I m do the same thing for the other user\n//         await updateDoc(doc(db, \"userChats\", user.uid), {\n//           [combinedId+\".userInfo\"]: {\n//             uid:currentUser.uid,\n//             displayName: currentUser.displayName,\n//             photoURL: currentUser.photoURL\n//           },\n//           [combinedId+\".date\"]: serverTimestamp()\n//         });\n//       }\n//   }catch(err){\n//     // create user chats}\n//     setUser(null)\n//     setUsername(\"\")\n//   };\n//   return (\n//     <div className='search'>\n//       <div className='searchForm'>\n//         <input type=\"text\" placeholder='Find a user'\n//         onKeyDown={handleKey}\n//         onChange={e=>setUsername(e.target.value)}\n//         value={username}\n//         />\n//       </div>\n//       {err && <span>User not found!</span>}\n//       {user && (<div className='userChat' onClick={handleSelect}>\n//         <img src={user.photoURL} />\n//         <div className='userChatInfo'>\n//             <span>{user.displayName}</span>\n//         </div>\n//       </div>)}\n//     </div>\n//   )\n// }\n// export default Search\n// \n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","collection","doc","getDocs","getDoc","query","serverTimestamp","setDoc","updateDoc","where","db","async","useContext","AuthContext","Search","user","setUser","err","setErr","currentUser","handleSearch","q","username","querySnapshot","forEach","data","handleKey","e","code","handleSelect","combinedId","uid","res","exists","messages","displayName","photoURL","setUsername","target","value"],"sources":["D:/Softwares Working/All data/Web Develpment/Projects/Chat-app using React+firebase/chatting-app/src/components/Search.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport { collection, \r\n  doc, \r\n  getDocs,\r\n  getDoc, \r\n  query, \r\n  serverTimestamp, \r\n  setDoc, \r\n  updateDoc, \r\n  where } from \"firebase/firestore\";\r\nimport { db } from '../Firebase'\r\nimport { async } from '@firebase/util';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst Search = () => {\r\n  const [] = useState(\"\")\r\n  const [user, setUser] = useState(null)\r\n  const [err, setErr] = useState(false)\r\n\r\n  const {currentUser} = useContext(AuthContext)\r\n\r\n  const handleSearch = async () => {\r\n    const q = query(\r\n      collection(db, \"users\"),\r\n      where(\"displayName\", \"==\", username)\r\n    );\r\n\r\n    try{\r\n      const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach((doc) => {\r\n        setUser(doc.data())\r\n    });\r\n\r\n    }catch(err){\r\n      setErr(true)\r\n    }\r\n  };\r\n  const handleKey = (e) => {\r\n    e.code === \"Enter\" && handleSearch();\r\n  }\r\n\r\n  const handleSelect = async () => {\r\n    // check whether the group(chats in firestore) exists, if not create\r\n    const combinedId = \r\n    currentUser.uid > user.uid \r\n    ? currentUser.uid + user.uid \r\n    : user.uid + currentUser.uid\r\n    \r\n    try{\r\n      const res = await getDoc(doc(db, \"chats\", combinedId))\r\n\r\n      if(!res.exists()){\r\n        // create a chat in chats collection\r\n        await setDoc(doc(db, \"chats\", combinedId), {messages: []});\r\n        // create user chats\r\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\r\n          [combinedId+\".userInfo\"]: {\r\n            uid:user.uid,\r\n            displayName: user.displayName,\r\n            photoURL: user.photoURL\r\n          },\r\n          [combinedId+\".date\"]: serverTimestamp()\r\n        });\r\n\r\n        // I m do the same thing for the other user\r\n        await updateDoc(doc(db, \"userChats\", user.uid), {\r\n          [combinedId+\".userInfo\"]: {\r\n            uid:currentUser.uid,\r\n            displayName: currentUser.displayName,\r\n            photoURL: currentUser.photoURL\r\n          },\r\n          [combinedId+\".date\"]: serverTimestamp()\r\n        });\r\n      }\r\n  }catch(err){\r\n    // create user chats}\r\n  \r\n    setUser(null)\r\n    setUsername(\"\")\r\n  };\r\n\r\n  return (\r\n    <div className='search'>\r\n      <div className='searchForm'>\r\n        <input type=\"text\" placeholder='Find a user'\r\n        onKeyDown={handleKey}\r\n        onChange={e=>setUsername(e.target.value)}\r\n        value={username}\r\n        />\r\n      </div>\r\n      {err && <span>User not found!</span>}\r\n      {user && (<div className='userChat' \r\n        onClick={handleSelect}>\r\n        <img src={user.photoURL} />\r\n        <div className='userChatInfo'>\r\n            <span>{user.displayName}</span>\r\n        </div>\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n};}\r\n\r\nexport default Search;\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n// import { useState } from 'react'\r\n// import { collection, doc, getDoc, query, serverTimestamp, setDoc, updateDoc, where } from \"firebase/firestore\";\r\n// import { db } from '../Firebase'\r\n// import { async } from '@firebase/util';\r\n// import { useContext } from 'react';\r\n// import { AuthContext } from '../context/AuthContext';\r\n\r\n// const Search = () => {\r\n//   const [] = useState(\"\")\r\n//   const [user, setUser] = useState(null)\r\n//   const [err, setErr] = useState(false)\r\n\r\n//   const {currentUser} = useContext(AuthContext)\r\n\r\n//   const handleSearch = async () => {\r\n//     const q = query(\r\n//       collection(db, \"users\"),\r\n//       where(\"displayName\", \"==\", username)\r\n//     );\r\n\r\n//     try{\r\n//       const querySnapshot = await getDoc(q);\r\n//         querySnapshot.forEach((doc) => {\r\n//         setUser(doc.data())\r\n//     });\r\n\r\n//     }catch(err){\r\n//       setErr(true)\r\n//     }\r\n//   };\r\n//   const handleKey = e => {\r\n//     e.code === \"Enter\" && handleSearch();\r\n//   }\r\n\r\n//   const handleSelect = async () => {\r\n//     // check whether the group(chats in firestore) exists, if not create\r\n//     const combinedId = currentUser.uid > user.uid \r\n//     ? currentUser.uid + user.uid \r\n//     : user.uid + currentUser.uid\r\n//     try{\r\n//       const res = await getDoc(doc(db, \"chats\", combinedId))\r\n\r\n//       if(!res.exists()){\r\n//         // create a chat in chats collection\r\n//         await setDoc(doc, (db, \"chats\", combinedId), {messages: []});\r\n//         // create user chats\r\n//         await updateDoc(doc(db, \"userChats\", currentUser.uid), {\r\n//           [combinedId+\".userInfo\"]: {\r\n//             uid:user.uid,\r\n//             displayName: user.displayName,\r\n//             photoURL: user.photoURL\r\n//           },\r\n//           [combinedId+\".date\"]: serverTimestamp()\r\n//         });\r\n\r\n//         // I m do the same thing for the other user\r\n//         await updateDoc(doc(db, \"userChats\", user.uid), {\r\n//           [combinedId+\".userInfo\"]: {\r\n//             uid:currentUser.uid,\r\n//             displayName: currentUser.displayName,\r\n//             photoURL: currentUser.photoURL\r\n//           },\r\n//           [combinedId+\".date\"]: serverTimestamp()\r\n//         });\r\n//       }\r\n//   }catch(err){\r\n//     // create user chats}\r\n  \r\n//     setUser(null)\r\n//     setUsername(\"\")\r\n//   };\r\n\r\n//   return (\r\n//     <div className='search'>\r\n//       <div className='searchForm'>\r\n//         <input type=\"text\" placeholder='Find a user'\r\n//         onKeyDown={handleKey}\r\n//         onChange={e=>setUsername(e.target.value)}\r\n//         value={username}\r\n//         />\r\n//       </div>\r\n//       {err && <span>User not found!</span>}\r\n//       {user && (<div className='userChat' onClick={handleSelect}>\r\n//         <img src={user.photoURL} />\r\n//         <div className='userChatInfo'>\r\n//             <span>{user.displayName}</span>\r\n//         </div>\r\n//       </div>)}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Search\r\n// "],"mappings":"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AA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,EAQGL,GAAG,iBAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARV,EASGF,IAAI,iBAAK;QAAK,SAAS,EAAC,UAAf;QACR,OAAO,EAAEc,YADD;QAAA,wBAER;UAAK,GAAG,EAAEd,IAAI,CAACqB;QAAf;UAAA;UAAA;UAAA;QAAA,QAFQ,eAGR;UAAK,SAAS,EAAC,cAAf;UAAA,uBACI;YAAA,UAAOrB,IAAI,CAACoB;UAAZ;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAHQ;MAAA;QAAA;QAAA;QAAA;MAAA,QATZ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAoBD,CA5DC;AA4DC,CAvFH;;GAAMrB,M;;KAAAA,M;AAyFN,eAAeA,MAAf,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA"},"metadata":{},"sourceType":"module"}